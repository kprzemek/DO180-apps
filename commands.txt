<<<<<<< HEAD
Chapter 1-5:
------------
podman run --name mysql-basic  -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 -d registry.redhat.io/rhel8/mysql-80:1 

CREATE TABLE Projects (id int NOT NULL, name varchar(255) DEFAULT NULL, code varchar(255) DEFAULT NULL, PRIMARY KEY (id));

INSERT into Projects (id, name, code) values (1,'DevOps','DO180');

=======
podman run --name mysql-basic  -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 -d registry.redhat.io/rhel8/mysql-80:1 
CREATE TABLE Projects (id int NOT NULL, name varchar(255) DEFAULT NULL, code varchar(255) DEFAULT NULL, PRIMARY KEY (id));
INSERT into Projects (id, name, code) values (1,'DevOps','DO180');
>>>>>>> c3b624d00f26a75c10c9fc9e8c518e03edd1e649
podman run --name persist-db -d -v /home/student/dbfiles:/var/lib/mysql/data -e MYSQL_USER=user1 -e MYSQL_PASSWORD=mypa55 -e MYSQL_DATABASE=items -e MYSQL_ROOT_PASSWORD=r00tpa55 registry.redhat.io/rhel8/mysql-80:1

podman cp /home/student/DO180/labs/manage-lifecycle/db.sql mysql-basic:/
podman exec -it mysql-basic /bin/bash -c 'mysql -uuser1 -pmypa55 items </db.sql'

curl -Ls https://quay.io/v2/redhattraining/httpd-parent/tags/list | python3 -m json.tool

<<<<<<< HEAD
curl -u='5883743|PrzemyslawKuznickiLP':'ey...dsferg' -Ls "https://sso.redhat.com/auth/realms/rhcc/protocol/redhat-docker-v2/auth?service=docker-registry" | python3 -m json.tool

curl -H "Authorization: Bearer wklejamy_access_token" -Ls https://registry.redhat.io/v2/rhel8/mysql-80/tags/list | python3 -m json.tool

oc new-app --image-stream php:7.3~https://github.com/kprzemek/DO180-apps --context-dir php-helloworld --name php-helloworld

Chapter 6:
----------
mysql -uuser1 -pmypa55 --protocol tcp -h localhost testdb </home/student/DO180/labs/manage-lifecycle/db.sql 
mysql -uuser1 -pmypa55 --protocol tcp -h localhost testdb -e 'select * from Projects;'
mysql -uuser1 -pmypa55 --protocol tcp -h localhost testdb (w srodku: drop table Projects; )

Chapter 9:
----------
oc new-app --name postgresql-persistent \
 --docker-image registry.redhat.io/rhel8/postgresql-13:1-7 \
 -e POSTGRESQL_USER=redhat \
 -e POSTGRESQL_PASSWORD=redhat123 \
 -e POSTGRESQL_DATABASE=persistentdb

oc set volumes deployment/postgresql-persistent \
 --add --name postgresql-storage --type pvc --claim-class nfs-storage \
 --claim-mode rwo --claim-size 10Gi --mount-path /var/lib/pgsql \
 --claim-name postgresql-storage

Chapter 10:
-----------
Certy sÄ… na maszynie UTILITY w /home/lab/ocp4/auth/kubeconfig
Cert kubeconfig lifetime:
  grep 'client-certificate-data' kubeconfig |awk '{print $2}' | base64 -d | openssl x509 -text

 oc adm policy add-cluster-role-to-user cluster-admin przem
 oc adm policy add-cluster-role-to-user cluster-admin admin
 oc get clusterrole
 oc describe clusterrole/admin
 oc describe clusterrole/view
 oc describe clusterrole/edit
 oc describe clusterrole/admin|grep configmaps
 oc describe clusterrole/view|grep configmaps
 oc get clusterrolebindings.
 oc get clusterrolebindings|less
 oc get clusterrolebindings -o wide|less
 oc get clusterrolebindings -o wide|grep self-provi
 oc describe clusterrole/self-provisioner
 oc get clusterrolebindings -o wide|grep admin
 oc get rolebindings 
 oc get rolebindings -o wide

Chapter 11:
-----------
oc create secret generic przem-secret --from-literal key1=SZKOLENIE --from-literal key2=DO285
oc set env deployment.apps/httpd --from secret/przem-secret --prefix PRZEM_
oc set volume deployment.apps/httpd --add --type secret --secret-name przem-secret --mount-path /przem-secrets

USUNIECIE ZMIENNYCH:
oc set env deployment.apps/httpd PRZEM_KEY1- PRZEM_KEY2-

USUNIECIE VOLUMENU:
oc set volume deployment.apps/httpd --name NAZWA_z_describe_deploumentu --remove

SCC:
oc get pod httpd-7457899db7-t9jmk -o yaml |oc adm policy scc-subject-review -f -
oc create serviceaccount przem-root
oc adm policy add-scc-to-user anyuid -z przem-root
oc set serviceaccount deployment.apps/httpd przem-root

Chapter 12:
-----------
selfSignet Certy dla route:
oc create route edge --service srv_name

Chapter 13:
-----------
oc label node master01 env=dev
oc patch deployment.apps/sample --patch '{"spec":{"template":{"spec":{"nodeSelector":{"env":"dev"}}}}}'
oc adm new-project demo --node-selector "env=dev"
oc annotate namespace demo openshift.io/node-selector="env=prod" --overwrite
oc scale --replicas 3 deployment.apps/sample

=======
curl -u='5883743|PrzemyslawKuznickiLP':'eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiJiNjRiMGMxOTU2MjI0ZDVjYjlhMWE4MTE4MGYwN2RmNiJ9.SHjoJbAK4USZozMg9NAnXOpvAGV9DnO3O1b0MxfqT2YYakIkTn0Lm34hR_4OcDSDX5FN9oXjZnMXapFRokj0yjCUH8QMPNKOln3EI-zb4w_0crww7UK-7FXGSNRsyQkaTv5qA2rhRzh4S_67Ew91GOvm4_dzLrvGDawDkASdnhv70v5ts3YC2aF-Rv-yVmANsLWpGyYJub2-outFcRM4FSDD-IL_X7-HnbvB9KMgQSNFbR5UtG9ugDwWhEmNcHImY2dbRKuHUXXvAv7NYoQl1u6SQmHzDFbRAmbSL127HIONJIM834VgC2uHdHg-0erS8CTLU5VxbGuowS7-Tm5fgAPHWoC6SzyXS4SK1dgHG4UwiQAsOrHb7b0YvJa3i9LA33fl0WX3gNWVruYaeIiJXyIBn-1i5M-UG0seryJRCdmF2ZIAbaGI8BNoLVMTK1wme1NZdrgaYhxNJOjFEZ8hqm3_9hPaP1T5CfHgf4KG_aQ7EXHnHayXdVEhrd4venshVIJIJQDnZ09hy-c8gv-TgbAtw3UT01Mims9Kk_2YMCWQV_4t3ShcSgMqgso1EgfgrNy8BjHZ4FEEF3oYGlMvaZVFH3ausfEsFSYp52lDZt473G8UyaAdS2O6MPKHO5tvkfTRsx-dqB-hRlI3Qu2s9aTtLS54uel6UYcLIYz2Hbc' -Ls "https://sso.redhat.com/auth/realms/rhcc/protocol/redhat-docker-v2/auth?service=docker-registry" | python3 -m json.tool

curl -H "Authorization: Bearer wklejamy_access_token" -Ls https://registry.redhat.io/v2/rhel8/mysql-80/tags/list | python3 -m json.tool
>>>>>>> c3b624d00f26a75c10c9fc9e8c518e03edd1e649
